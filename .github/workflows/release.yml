name: Monorepo Release

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
  push:
    branches:
      - '*'
  workflow_dispatch:
permissions:
  contents: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Check Node.js version
        run: node --version

      - name: Install deps
        run: npm install

      # Parse package name and version from branch
      - name: Parse version and package
        id: meta
        run: |
          REF="${{ github.head_ref || github.ref_name }}"
          echo "REF=$REF"

          NAME=$(echo "$REF" | cut -d'/' -f2)
          VERSION=$(echo "$REF" | cut -d'/' -f3 | sed 's/^v//')

          echo "Parsed NAME=$NAME"
          echo "Parsed VERSION=$VERSION"

          if [ -z "$NAME" ] || [ -z "$VERSION" ]; then
            echo "ERROR: Could not parse package name or version from branch '$REF'"
            exit 1
          fi

          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
            
      - name: Debug meta outputs
        run: |
          echo "Parsed package name: ${{ steps.meta.outputs.name }}"
          echo "Parsed version: ${{ steps.meta.outputs.version }}"

      - name: Install rimraf globally
        run: npm install -g rimraf

      - name: Lint package
        run: npm run lint --workspace=${{ steps.meta.outputs.name }}

      - name: Build package using workspace
        run: npm run build --workspace=${{ steps.meta.outputs.name }}

      - name: Publish to NPM
        uses: ./.github/actions/npm-publish
        with:
           node-version: 22
           npm-token: ${{ secrets.NPM_TOKEN }}
           version: ${{ steps.meta.outputs.version }}
           require-build: true
           package: ${{ steps.meta.outputs.name }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: ./.github/actions/release-create
        with:
          tag: ${{ steps.meta.outputs.name }}@${{ steps.meta.outputs.version }}
          name: ${{ steps.meta.outputs.name }}
          version: ${{ steps.meta.outputs.version }}